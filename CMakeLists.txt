cmake_minimum_required(VERSION 3.2.3)
cmake_policy(SET CMP0074 NEW)
project(ExageostatR)

include(ProcessorCount)
ProcessorCount(CPU_CORES)
include(ExternalProject)

set(MAKE_COMMAND "make -j ${CPU_CORES} -l $((${CPU_CORES} + 1))" )
set(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)
set(ENV{LD_LIBRARY_PATH} /tmp/Cmake-test/:$ENV{LD_LIBRARY_PATH})
set(ENV{PKG_CONFIG_PATH} /tmp/Cmake-test/:$ENV{PKG_CONFIG_PATH})

find_package(MKL)
message("${MKL_ROOT}")
if(MKL_FOUND)
    include_directories(${MKL_INCLUDE_DIR})
    set(EXT_LIBS ${EXT_LIBS} ${MKL_LIBRARIES})
    set(BLAS_FOUND TRUE)
    add_definitions(-DBLAS_FOUND=1 -DMKL_FOUND=1)
    set(MKL_ARG ${MKL_ROOT}/bin/mklvars.sh)
    message(${MKL_ARG})
    execute_process(COMMAND source ${MKL_ARG}
                    RESULT_VARIABLE res)
    message("${MKL_ROOT}/bin/mklvars.sh")
    message(${res})
    message("FOUND MKL")
    set(BLAS_VENDOR "Intel")
else(MKL_FOUND)
    set(BLAS_VENDOR "OpenBLAS")
    find_package(BLAS REQUIRED)
    if(BLAS_FOUND)
        message("FOUND BLAS")
        include(FindCBLAS)
        if(CBLAS_FOUND)
            message("FOUND CBLAS")
            include_directories(${BLAS_INCLUDE_DIR} ${CBLAS_INCLUDE_DIR})
            set(EXT_LIBS ${EXT_LIBS} ${BLAS_LIBRARIES} ${CBLAS_LIBRARIES})
            add_definitions(-DBLAS_FOUND=1)
        endif(CBLAS_FOUND)
    endif(BLAS_FOUND)
endif(MKL_FOUND)

include(ImportGSL)
include(ImportNLOPT)
include(ImportHWLOC)
include(ImportStarPu)
include(ImportStarsH)
include(ImportChameleon)
